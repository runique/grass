<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Lua教程</title>
<meta name="description" content="Lua Tutorial for Beginners - Learn Lua in simple and easy steps starting from basic to advanced concepts with examples including Overview, Environment Setup, Program Structure, Basic Syntax, Data Types, Variables, Constants, Operators, Decision Making, Loops, Functions, Scope Rules, Arrays, Pointers, Structures, Slice, Range, Maps, Recursion, Type Casting, Interfaces, Error Handling." />
<meta name="keywords" content="Lua, Tutorial, beginners, Overview, Environment Setup, Program Structure, Basic Syntax, Data Types, Variables, Constants, Operators, Arithmetic Operators, Relational Operators, Logical Operators, Bitwise Operators, Miscellaneous Operators, Operators Precedence, Decision Making, if statement, if...else statement, nested if statements, switch statement, select statement, Loops, for Loop, nested for Loops, break statement, continue statement, goto statement, Functions, Call by value, Call by reference, functions as values, function closure, method, Scope Rules, Arrays, Multi-dimensional arrays, Passing arrays to functions, Pointers, Array of pointers, Pointer to pointer, Passing pointers to functions, Structures, Structure as function arguments, pointers to structures, Slice, Sub-slicing, copy() and append() functions, Range, Maps, Recursion, Type Casting, Interfaces, Error Handling." />
<base href="http://www.getq.cn/" />
<link rel="shortcut icon" href="/static/img/r-letter.png" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="website" />
<meta property="fb:app_id" content="471319149685276" />
<meta property="og:site_name" content="www.tutorialspoint.com" />
<meta name="robots" content="index, follow"/>
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="/static/js/script-min-v4.js"></script>
<link rel="stylesheet" href="/static/theme/css/style-min.css">
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->

<style>
pre.prettyprint.tryit {min-height:37px; background: #eee /*url(static/tutorials/go/images/try-it.jpg)*/ top right no-repeat !important}select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #74cddd url(/static/img/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #74cddd !important;}
.submenu-item{ border-bottom: 2px solid #74cddd !important; border-top: 2px solid #74cddd !important }
.ace_scroller{overflow: auto!important;}
</style>

<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>

</head>

<body onload="prettyPrint()">

<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="/static/img/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>

<header>
   <div class="container">			
      <h1 class="logo">
      <a href="" title="在线开发教程">
      <img alt="在线开发教程" src="/static/img/logo.jpg">
      </a>
      </h1>			

         <!-- search code here  --> 
      <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
   </div>	
</header>

<div style="clear:both;"></div>

<div role="main" class="main">
<div class="container">
<div class="row">

<div class="col-md-2">
<aside class="sidebar">
<style>
.ts {
   text-align:center !important;
   vertical-align: middle !important;
}
</style>

<div class="mini-logo">
<img src="/static/tutorials/go/images/go-mini-logo.jpg" alt="Lua语言教程" />
</div>

<ul class="nav nav-list primary left-menu">
<li class="heading">Lua教程</li>
<li><a href="/static/tutorials/lua/index.htm">Lua概要</a></li>
<li><a href="/static/tutorials/go/go_environment.htm">Go - Environment Setup</a></li>
<li><a href="/static/tutorials/go/go_program_structure.htm">Go - Program Structure</a></li>
<li><a href="/static/tutorials/go/go_basic_syntax.htm">Go - Basic Syntax</a></li>
<li><a href="/static/tutorials/go/go_data_types.htm">Go - Data Types</a></li>
<li><a href="/static/tutorials/go/go_variables.htm">Go - Variables</a></li>
<li><a href="/static/tutorials/go/go_constants.htm">Go - Constants</a></li>
<li><a href="/static/tutorials/go/go_operators.htm">Go - Operators</a></li>
<li><a href="/static/tutorials/go/go_decision_making.htm">Go - Decision Making</a></li>
<li><a href="/static/tutorials/go/go_loops.htm">Go - Loops</a></li>
<li><a href="/static/tutorials/go/go_functions.htm">Go - Functions</a></li>
<li><a href="/static/tutorials/go/go_scope_rules.htm">Go - Scope Rules</a></li>
<li><a href="/static/tutorials/go/go_strings.htm">Go - Strings</a></li>
<li><a href="/static/tutorials/go/go_arrays.htm">Go - Arrays</a></li>
<li><a href="/static/tutorials/go/go_pointers.htm">Go - Pointers</a></li>
<li><a href="/static/tutorials/go/go_structures.htm">Go - Structures</a></li>
<li><a href="/static/tutorials/go/go_slice.htm">Go - Slice</a></li>
<li><a href="/static/tutorials/go/go_range.htm">Go - Range</a></li>
<li><a href="/static/tutorials/go/go_maps.htm">Go - Maps</a></li>
<li><a href="/static/tutorials/go/go_recursion.htm">Go - Recursion</a></li>
<li><a href="/static/tutorials/go/go_type_casting.htm">Go - Type Casting</a></li>
<li><a href="/static/tutorials/go/go_interfaces.htm">Go - Interfaces</a></li>
<li><a href="/static/tutorials/go/go_error_handling.htm">Go - Error Handling</a></li>
</ul>

</aside>
</div>

<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">

<div class="cover">
<img class="img-responsive" src="/static/tutorials/go/images/go.jpg" alt="Lua教程" />
</div>

<hr />
<div class="pre-btn">
<a href="/static/tutorials/go/index.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> 上一页</a>
</div>

<div class="nxt-btn">
<a href="/static/tutorials/go/go_overview.htm">下一页 <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>

<div class="clearer"></div>
<hr />

<h1>Lua概要</h1>
<br>
<p> Lua是一个小巧的脚本语言。是巴西里约热内卢天主教大学（Pontifical Catholic University of Rio de Janeiro）里的一个研究小组，由Roberto Ierusalimschy、Waldemar Celes 和 Luiz Henrique de Figueiredo所组成并于1993年开发。 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。Lua由标准C编写而成，几乎在所有操作系统和平台上都可以编译，运行。Lua并没有提供强大的库，这是由它的定位决定的。所以Lua不适合作为开发独立应用程序的语言。Lua 有一个同时进行的JIT项目，提供在特定平台上的即时编译功能。</p>
<p>Lua脚本可以很容易的被C/C++ 代码调用，也可以反过来调用C/C++的函数，这使得Lua在应用程序中可以被广泛应用。不仅仅作为扩展脚本，也可以作为普通的配置文件，代替XML,ini等文件格式，并且更容易理解和维护。Lua由标准C编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以编译，运行。一个完整的Lua解释器不过200k，在目前所有脚本引擎中，Lua的速度是最快的。这一切都决定了Lua是作为嵌入式脚本的最佳选择。</p>
<h1>特性</h1>
<h2>轻量级</h2>
<p>轻量级Lua语言的官方版本只包括一个精简的核心和最基本的库。这使得Lua体积小、启动速度快，从而适合嵌入在别的程序里。5.0.2版的Lua的内核小于120KB，而Python的内核大约860KB，Perl的内核大约1.1MB</p>
<h2>可扩展</h2>
<p>可扩展 Lua并不象其它许多"大而全"的语言那样，包括很多功能，比如网络通讯、图形界面等。但是Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供这些功能，Lua可以使用它们，就像是本来就内置的功能一样。</p>
<h2>其它特性</h2>
<p>Lua还具有其它一些特性：同时支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；语言内置模式匹配；闭包(closure)；函数也可以看做一个值；提供多线程（协同进程 [4]  ，并非操作系统所支持的线程）支持；通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。</p>
<h2>Lua 应用场景</h2>
<ul class="list">
<li>游戏开发 </li>
<li>独立应用脚本</li>
<li>Web 应用脚本</li>
<li>扩展和数据库插件如：MySQL Proxy 和 MySQL WorkBench</li>
<li>安全系统，如入侵检测系统</li>
</ul>

<hr />
<div class="pre-btn">
<a href="/static/tutorials/go/index.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> 上一页</a>
</div>

<div class="nxt-btn">
<a href="/static/tutorials/go/go_overview.htm">下一页 <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr />
<!-- PRINTING ENDS HERE -->

</div>
</div>
</div>

</div>
</div>
<!-- Libs -->
<script type="text/javascript" src="/static/theme/js/custom-min.js?v=5"></script>

</div>

</body>

</html>
